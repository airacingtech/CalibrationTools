<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="vehicle_id" default="default"/>
  <let name="sensor_model" value="aip_xx1"/>
  <arg name="camera_name" default=""/>
  <arg name="rviz" default="false"/>

  <!-- we do not use the standard image_raw name to avoid naming conflicts -->
  <let name="calibration_sensor_frame" value="velodyne_top"/>
  <let name="rviz_profile" value="$(find-pkg-share extrinsic_tag_based_base_calibrator)/rviz/xx1.rviz"/>

  <let name="image_decompressed_topic" value="/sensing/camera/camera0/image_rect_color/decompressed"/>
  <let name="image_compressed_topic" value="/sensing/camera/camera0/image_rect_color/compressed"/>
  <let name="camera_info_topic" value="/sensing/camera/camera0/camera_info"/>

  <let name="camera_frame" value="camera0/camera_link"/>

  <!-- calibration api -->
  <arg name="base_frame" default="base_link"/>
  <arg name="sensor_kit_frame" default="sensor_kit_base_link"/>
  <arg name="lidar_base_frame" default="velodyne_top_base_link"/>
  <arg name="lidar_frame" default="velodyne_top"/>

  <!-- image decompressor -->
  <node pkg="image_transport_decompressor" exec="image_transport_decompressor_node" name="decompressor" output="screen">
    <remap from="decompressor/input/compressed_image" to="$(var image_compressed_topic)"/>
    <remap from="decompressor/output/raw_image" to="$(var image_decompressed_topic)"/>
  </node>

  <!-- top: lidartag detector -->
  <group>
    <push-ros-namespace namespace="top"/>

    <include file="$(find-pkg-share lidartag)/launch/lidartag_velodyne_vls128.launch.xml">
      <arg name="pointcloud_topic" value="/sensing/lidar/top/pointcloud_raw"/>
    </include>

    <node pkg="tier4_tag_utils" exec="lidartag_filter_node" name="lidartag_filter" output="screen">
      <param name="max_no_observation_time" value="3.0"/>
      <param name="new_hypothesis_distance" value="1.5"/>

      <param name="new_hypothesis_transl" value="0.1"/>
      <param name="new_hypothesis_rot" value="15.0"/>
      <param name="measurement_noise_transl" value="0.05"/>
      <param name="measurement_noise_rot" value="5.0"/>
      <param name="process_noise_transl" value="0.01"/>
      <param name="process_noise_transl_dot" value="0.001"/>
      <param name="process_noise_rot" value="1.0"/>
      <param name="process_noise_rot_dot" value="0.1"/>
    </node>
  </group>

  <!-- left: lidartag detector -->
  <group>
    <push-ros-namespace namespace="left"/>

    <include file="$(find-pkg-share lidartag)/launch/lidartag_velodyne_vlp16.launch.xml">
      <arg name="pointcloud_topic" value="/sensing/lidar/left/pointcloud_raw"/>
    </include>

    <node pkg="tier4_tag_utils" exec="lidartag_filter_node" name="lidartag_filter" output="screen">
      <param name="max_no_observation_time" value="3.0"/>
      <param name="new_hypothesis_distance" value="1.5"/>

      <param name="new_hypothesis_transl" value="0.1"/>
      <param name="new_hypothesis_rot" value="15.0"/>
      <param name="measurement_noise_transl" value="0.05"/>
      <param name="measurement_noise_rot" value="5.0"/>
      <param name="process_noise_transl" value="0.01"/>
      <param name="process_noise_transl_dot" value="0.001"/>
      <param name="process_noise_rot" value="1.0"/>
      <param name="process_noise_rot_dot" value="0.1"/>
    </node>
  </group>

  <!-- right: lidartag detector -->
  <group>
    <push-ros-namespace namespace="right"/>

    <include file="$(find-pkg-share lidartag)/launch/lidartag_velodyne_vlp16.launch.xml">
      <arg name="pointcloud_topic" value="/sensing/lidar/right/pointcloud_raw"/>
    </include>

    <node pkg="tier4_tag_utils" exec="lidartag_filter_node" name="lidartag_filter" output="screen">
      <param name="max_no_observation_time" value="3.0"/>
      <param name="new_hypothesis_distance" value="1.5"/>

      <param name="new_hypothesis_transl" value="0.1"/>
      <param name="new_hypothesis_rot" value="15.0"/>
      <param name="measurement_noise_transl" value="0.05"/>
      <param name="measurement_noise_rot" value="5.0"/>
      <param name="process_noise_transl" value="0.01"/>
      <param name="process_noise_transl_dot" value="0.001"/>
      <param name="process_noise_rot" value="1.0"/>
      <param name="process_noise_rot_dot" value="0.1"/>
    </node>
  </group>

  <!-- rear: lidartag detector -->
  <group>
    <push-ros-namespace namespace="rear"/>

    <include file="$(find-pkg-share lidartag)/launch/lidartag_velodyne_vlp16.launch.xml">
      <arg name="pointcloud_topic" value="/sensing/lidar/rear/pointcloud_raw"/>
    </include>

    <node pkg="tier4_tag_utils" exec="lidartag_filter_node" name="lidartag_filter" output="screen">
      <param name="max_no_observation_time" value="3.0"/>
      <param name="new_hypothesis_distance" value="1.5"/>

      <param name="new_hypothesis_transl" value="0.1"/>
      <param name="new_hypothesis_rot" value="15.0"/>
      <param name="measurement_noise_transl" value="0.05"/>
      <param name="measurement_noise_rot" value="5.0"/>
      <param name="process_noise_transl" value="0.01"/>
      <param name="process_noise_transl_dot" value="0.001"/>
      <param name="process_noise_rot" value="1.0"/>
      <param name="process_noise_rot_dot" value="0.1"/>
    </node>
  </group>

  <!-- apriltag detector -->
  <include file="$(find-pkg-share extrinsic_tag_based_calibrator)/launch/apriltag_16h5.launch.py">
    <arg name="image_topic" value="$(var image_decompressed_topic)"/>
    <arg name="camera_info_topic" value="$(var camera_info_topic)"/>
  </include>

  <node pkg="tier4_tag_utils" exec="apriltag_filter_node" name="apriltag_filter" output="screen">
    <!-- filtering parameters -->
    <param name="min_tag_size" value="0.6"/>
    <!--0.6 = 0.8 * 0.75 the apriltag size, not the lidartag-->
    <param name="max_tag_distance" value="30.0"/>
    <param name="max_allowed_homography_error" value="0.5"/>
    <param name="min_margin" value="50.0"/>
    <param name="max_hamming_error" value="0"/>

    <param name="max_no_observation_time" value="3.0"/>
    <param name="new_hypothesis_distance" value="1.5"/>
    <param name="tag_ids" value="[0, 3, 4]"/>
    <param name="tag_sizes" value="[0.6, 0.6, 0.6]"/>
    <!-- the sizes of tag_ids -->
    <param name="max_convergence_transl" value="2.0"/>
    <param name="new_hypothesis_transl" value="20.0"/>

    <param name="measurement_noise_transl" value="0.2"/>
    <param name="process_noise_transl" value="0.02"/>
  </node>

  <!-- base -> sensor_kit: extrinsic_calibration_client -->
  <arg name="base_to_sensor_kit_src_yaml" default="$(find-pkg-share individual_params)/config/$(var vehicle_id)/$(var sensor_model)/sensors_calibration.yaml"/>
  <arg name="base_to_sensor_kit_dst_yaml" default="$(env HOME)/sensors_calibration.yaml"/>

  <node pkg="extrinsic_calibration_client" exec="extrinsic_calibration_client" name="base_to_sensor_kit_extrinsic_calibration_client" output="screen">
    <remap from="extrinsic_calibration_manager" to="base_to_sensor_kit_extrinsic_calibration_manager"/>
    <param name="src_path" value="$(var base_to_sensor_kit_src_yaml)"/>
    <param name="dst_path" value="$(var base_to_sensor_kit_dst_yaml)"/>
  </node>

  <!-- base -> sensor_kit: extrinsic_calibration_manager -->
  <node pkg="extrinsic_calibration_manager" exec="extrinsic_calibration_manager" name="base_to_sensor_kit_extrinsic_calibration_manager" output="screen">
    <remap from="extrinsic_calibration_manager" to="base_to_sensor_kit_extrinsic_calibration_manager"/>
    <param name="parent_frame" value="$(var base_frame)"/>
    <param name="child_frames" value="
    [$(var sensor_kit_frame)]"/>
  </node>

  <!-- base-lidar calibrator -->
  <include file="$(find-pkg-share extrinsic_tag_based_base_calibrator)/launch/calibrator.launch.xml">
    <arg name="base_frame" value="base_link"/>

    <arg name="lidar_sensor_kit_frames" value="[$(var sensor_kit_frame)]"/>
    <arg name="calibration_lidar_parent_frames" value="[$(var lidar_base_frame)]"/>
    <arg name="lidar_calibration_service_names" value="['$(var base_frame)/$(var sensor_kit_frame)']"/>

    <arg name="camera_sensor_kit_frames" value="['']"/>
    <arg name="calibration_camera_parent_frames" value="['']"/>
    <arg name="camera_calibration_service_names" value="['']"/>

    <arg name="main_calibration_sensor_frame" value="$(var lidar_frame)"/>
    <arg name="calibration_lidar_frames" value="[$(var lidar_frame)]"/>
    <arg name="calibration_camera_frames" value="['']"/>

    <!-- Topic configuration -->
    <arg name="calibration_lidar_detections_topics" value="['/top/lidartag/filtered/detections_array']"/>
    <arg name="calibration_image_detections_topics" value="['']"/>
    <arg name="calibration_camera_info_topics" value="['']"/>

    <!-- Tag configuration-->
    <arg name="waypoint_tag_ids" value="[0]"/>
    <arg name="ground_tag_ids" value="[6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]"/>

    <arg name="left_wheel_tag_id" value="4"/>
    <arg name="right_wheel_tag_id" value="3"/>

    <arg name="ground_tag_size" value="0.163"/>

    <!-- Initial intrinsics calibration -->
    <arg name="intrinsic_calibration_tag_ids" value="[0, 4]"/>

    <!-- Optimization configuration -->
    <arg name="ba_optimize_intrinsics" value="true"/>
    <arg name="ba_share_intrinsics" value="true"/>
    <arg name="ba_force_shared_ground_plane" value="true"/>
  </include>

  <node pkg="tf2_ros" exec="static_transform_publisher" name="estimated_base_link_broadcaster" output="screen" args="0 0 0 0 0 0 velodyne_top estimated_base_link"/>

  <node pkg="rviz2" exec="rviz2" name="rviz2" output="log" args="-d $(var rviz_profile)" if="$(var rviz)"/>
</launch>
